{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\r\n  ComputedFields,\r\n  defineDocumentType,\r\n  makeSource,\r\n} from 'contentlayer/source-files'\r\nimport siteConfig from 'config/site-config.json'\r\nimport remarkSlug from 'remark-slug'\r\nimport remarkGfm from 'remark-gfm'\r\nimport remarkEmoji from 'remark-emoji'\r\nimport { rehypeMdxCodeMeta } from 'utils/rehype-code-meta'\r\n\r\nconst computedFields: ComputedFields = {\r\n  slug: {\r\n    type: 'string',\r\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n  },\r\n}\r\n\r\nconst Blogs = defineDocumentType(() => ({\r\n  name: 'Blog',\r\n  filePathPattern: 'blog/**/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    author: { type: 'string' },\r\n    publishedDate: { type: 'string' },\r\n  },\r\n  computedFields: {\r\n    ...computedFields,\r\n    frontMatter: {\r\n      type: 'json',\r\n      resolve: (doc) => ({\r\n        publishedDate: {\r\n          raw: doc.publishedDate,\r\n          iso: new Date(doc.publishedDate).toISOString(),\r\n          text: new Date(doc.publishedDate).toDateString(),\r\n        },\r\n        author: doc.author,\r\n        title: doc.title,\r\n        description: doc.description,\r\n        slug: `/${doc._raw.flattenedPath}`,\r\n        editUrl: `${siteConfig.repo.editUrl}/${doc._id}`,\r\n      }),\r\n    },\r\n  },\r\n}))\r\n\r\nconst contentLayerConfig = makeSource({\r\n  contentDirPath: 'content',\r\n  documentTypes: [Blogs],\r\n  mdx: {\r\n    rehypePlugins: [rehypeMdxCodeMeta],\r\n    remarkPlugins: [remarkSlug, remarkGfm, remarkEmoji],\r\n  },\r\n})\r\n\r\nexport default contentLayerConfig"],
  "mappings": ";AAAA;AAAA,EAEE;AAAA,EACA;AAAA,OACK;AACP,OAAO,gBAAgB;AACvB,OAAO,gBAAgB;AACvB,OAAO,eAAe;AACtB,OAAO,iBAAiB;AACxB,SAAS,yBAAyB;AAElC,IAAM,iBAAiC;AAAA,EACrC,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK;AAAA,EACjC;AACF;AAEA,IAAM,QAAQ,mBAAmB,OAAO;AAAA,EACtC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,QAAQ,EAAE,MAAM,SAAS;AAAA,IACzB,eAAe,EAAE,MAAM,SAAS;AAAA,EAClC;AAAA,EACA,gBAAgB;AAAA,IACd,GAAG;AAAA,IACH,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AAAA,QACjB,eAAe;AAAA,UACb,KAAK,IAAI;AAAA,UACT,KAAK,IAAI,KAAK,IAAI,aAAa,EAAE,YAAY;AAAA,UAC7C,MAAM,IAAI,KAAK,IAAI,aAAa,EAAE,aAAa;AAAA,QACjD;AAAA,QACA,QAAQ,IAAI;AAAA,QACZ,OAAO,IAAI;AAAA,QACX,aAAa,IAAI;AAAA,QACjB,MAAM,IAAI,IAAI,KAAK;AAAA,QACnB,SAAS,GAAG,WAAW,KAAK,WAAW,IAAI;AAAA,MAC7C;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,KAAK;AAAA,EACrB,KAAK;AAAA,IACH,eAAe,CAAC,iBAAiB;AAAA,IACjC,eAAe,CAAC,YAAY,WAAW,WAAW;AAAA,EACpD;AACF,CAAC;AAED,IAAO,8BAAQ;",
  "names": []
}
